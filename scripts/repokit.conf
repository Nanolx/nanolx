#####
#
# repokit configuration
#
#####

# path to local apt repository
REPOKIT_PATH=/var/www/apt

# distribution to put packages in
REPOKIT_DIST=unstable

# compressor for debian orig tarballs
REPOKIT_ORIG_COMPRESSOR=xz

# compressor for source tarballs
REPOKIT_DIST_COMPRESSOR=(bz2:bzip2 xz:xz)

# compression level
REPOKIT_LEVL_COMPRESSOR=-9

# create SHA256 checksum for source tarballs
REPOKIT_SHA256=True

# gpg sign SHA256 checksum for source tarballs
REPOKIT_SIGN=True

# available schroots
REPOKIT_SCHROOTS=(sid-armhf sid-i386)

# mail address for dh_make
REPOKIT_MAIL=repo@server.org

# creator name for dh_make
REPOKIT_NAME="John Dowe"

# default rev for initial build for dh_make
REPOKIT_REV=1build

# flags for dpkg-buildpackage
REPOKIT_BUILD_FLAGS="-j8"

# flags for sbuild
REPOKIT_SBUILD_FALGS="--no-apt-distupgrade --no-apt-upgrade -j8"

# directory where all packaging scripts are stored
REPOKIT_BUILD_SCRIPTS=/var/www/git/packaging

# ftp server for ftp push
REPOKIT_FTP_SRV=ftp.myserver.org

# directory on ftp server
REPOKIT_FTP_DIR=httpdocs/apt

# username for ftp push
REPOKIT_FTP_USR=myuser

# password for ftp push needs to be stored as
# GPG encrypted file in ${HOME}/.repokit.pw
#
# to do so, given you already have a GPG key,
# issue the following command:
#
# gpg --encrypt -r "YOUR_GPG_IDENTITY" > ${HOME}/.repokit.pw
#
# enter or paste the password and press Ctrl-D to exit
# GPG will now store an encrypted version of your input
# in the file ${HOME}/.repokit.pw and repokit will auto
# decrypt it when required, this will make your system's
# askpass to popup in order to unlock the GPG key
